name: E2E Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs: # Docs: <https://git.io/JvxXE>
  run-ats:
    name: Run the End-to-End (E2E) Automated Tests (AT)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Prepare the environment
        run: |
          echo "== LETSENCRYPT ENV =="
          cp ./letsencrypt/.env.template ./letsencrypt/.env
          cat ./letsencrypt/.env

          echo "== MONITOR ENV =="
          cp ./monitor/.env.template ./monitor/.env
          sed -i 's/VIRTUAL_HOST=/VIRTUAL_HOST=monitor.userver.lan/g' ./monitor/.env
          cat ./monitor/.env

          echo "== NGINX-PROXY ENV =="
          cp ./nginx-proxy/.env.template ./nginx-proxy/.env
          cat ./nginx-proxy/.env

          echo "== WHOAMI ENV =="
          cp ./whoami/.env.template ./whoami/.env
          sed -i 's/VIRTUAL_HOST=/VIRTUAL_HOST=whoami.userver.lan/g' ./whoami/.env
        shell: bash

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 monitor.userver.lan" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 whoami.userver.lan" | sudo tee -a /etc/hosts
          echo "== HOSTS FILE CONTENT =="
          sudo cat /etc/hosts
        shell: bash

      - name: Create the docker network
        run: >
          docker network create nginx-proxy
        shell: bash

      - name: Try to run containers
        run: >
          docker compose up -d --build --remove-orphans
        shell: bash

      - name: Wait 10 seconds for startup
        run: sleep 10s
        shell: bash

      - name: Run the End-to-End (E2E) tests
        run: ./run_e2e_tests.sh
        shell: bash
